import sys
from binascii import hexlify, unhexlify
from GVRlib import dukpt

def check(label, expected, calculated):
    print(label, end = ": ")
    if expected == calculated:
        print("correct!")
    else:
        print("fail!\nexpected  : " + hexlify(expected).decode('latin 1').upper() + "\ncalculated: " + hexlify(calculated).decode('latin 1').upper())
        sys.exit(1)
        
# verify table for DUKPT (SMIDR, PIN_KEY, MAC_KEY, EPB, MAC)
dukpt_verify_table  = [
[ b"FFFF9876543210E00001", b"35FDB4BBAEE6A293", b"35FDB4BBAEE65D93", b"6B1431D0D9B23093", b"1238716E08B239B3E5DE7138" ],
[ b"FFFF9876543210E00002", b"1A3CD4AB030F02BB", b"1A3CD4AB030FFDBB", b"B76997F83C1479DB", b"0B3EE955D576F08E934A6981" ],
[ b"FFFF9876543210E00003", b"1998AA279AA21032", b"1998AA279AA2EF32", b"925BC2A39652CF75", b"FF4D991CE3B1948B0488C0FC" ],
[ b"FFFF9876543210E00004", b"4D2ED4E7D411C27D", b"4D2ED4E7D4113D7D", b"8E180C51E598ED9C", b"5C3BFCAE24D78E7A23903810" ],
[ b"FFFF9876543210E00005", b"28EBB08D6CF7D682", b"28EBB08D6CF72982", b"C799F1C4E638BAD4", b"431F8B2346D28D3AD3B12299" ],
[ b"FFFF9876543210E00006", b"81DDC59C51F89EC5", b"81DDC59C51F861C5", b"1E0961DA7A131C31", b"1170113E51AD82916369262A" ],
[ b"FFFF9876543210E00007", b"21813BBA85CF416A", b"21813BBA85CFBE6A", b"1C4C5CDFED8E8777", b"E32D47CE0E4B1056D36F1717" ],
[ b"FFFF9876543210E00008", b"34E5014B8E997DE8", b"34E5014B8E9982E8", b"8772B46D98DC8444", b"DAECBABBDB95D10618412735" ],
[ b"FFFF9876543210E00009", b"1BC9DD89F13DAD70", b"1BC9DD89F13D5270", b"8DC939C56D0FD13C", b"024CBA298A88580CC629AD3C" ],
[ b"FFFF9876543210E0000A", b"C5730F52B823E30B", b"C5730F52B8231C0B", b"CFB9B25BA6875971", b"C608754DA167412F672D1752" ],
[ b"FFFF9876543210E0000B", b"B5990289A9CDB5FB", b"B5990289A9CD4AFB", b"23CB8282DF457BFC", b"C7525F252DE7EA8057F9651A" ],
[ b"FFFF9876543210E0000C", b"FA000A709DF2808E", b"FA000A709DF27F8E", b"6977948EAEEE59D1", b"45AD360198F94915A4B3B2D9" ],
[ b"FFFF9876543210E0000D", b"02D6250E1C06009D", b"02D6250E1C06FF9D", b"F4D14F00470C69FD", b"6767C241240CA20E9E1F55BA" ],
[ b"FFFF9876543210E0000E", b"840020C3990C8CDB", b"840020C3990C73DB", b"15717318C288776D", b"BFB8D1FBC0631C135E1C6316" ],
[ b"FFFF9876543210E0000F", b"E57F414FE873E0E6", b"E57F414FE8731FE6", b"C578B541B9A58A5B", b"AA4774C7924EB60B0CBE8A2E" ],
[ b"FFFF9876543210E00010", b"2F7EEF21B68B8BBC", b"2F7EEF21B68B74BC", b"6268FFC127118969", b"023A267471471E0DEB205224" ],
[ b"FFFF9876543210E00011", b"F393B7D63A5A761B", b"F393B7D63A5A891B", b"A43B7FE9E3426E4E", b"9E235E5E399A70AE524E4E65" ],
[ b"FFFF9876543210E00012", b"72076E53243EC5AA", b"72076E53243E3AAA", b"0664AB26B1D3BC95", b"BC359085EF4584D308D4E62A" ],
[ b"FFFF9876543210E00013", b"932DA0370FDEACA8", b"932DA0370FDE53A8", b"20013153EC69EB5D", b"A405E3AED6F1C2A9E24E379A" ],
[ b"FFFF9876543210E00014", b"86D247E0E1567868", b"86D247E0E1568768", b"8C003174CFC5F0AF", b"85177F99804DBDB7987E223F" ],
[ b"FFFF9876543210E00015", b"D6395F8E660EE72D", b"D6395F8E660E182D", b"934A85AC28AFE4AC", b"1F7111BBBCDE4D18756B39F4" ],
[ b"FFFF9876543210E10000", b"D515CFBB8257EF9C", b"D515CFBB8257109C", b"4E2F0DF28C37698A", b"7808154E384CE3696D395312" ],
[ b"FFFF9876543210E20000", b"7BCBCFE0335C2BD3", b"7BCBCFE0335CD4D3", b"FFF38FDCBE5ACBD7", b"483A9E6225DB52E81F0523D4" ],
[ b"FFFF9876543210E40000", b"B2B27F021F67A100", b"B2B27F021F675E00", b"58ECCB3DA8296EC8", b"D6A4ED1EB6FCB1886A526A97" ],
[ b"FFFF9876543210E80000", b"D75A2E8DA84526AF", b"D75A2E8DA845D9AF", b"1A556E94C8AE1C0B", b"7A6A7847DB97C20BFFAA07D9" ],
[ b"FFFF9876543210EFF800", b"653E5B68A791E24E", b"653E5B68A7911D4E", b"A6552D24B01E71A0", b"08E1A9FA3E6FF81F68ECD518" ],
[ b"FFFF9876543210EFF801", b"B2752D548F8E2D3E", b"B2752D548F8ED23E", b"F415E7192C3571F7", b"932A5F7DA41DF53FBE85E1A1" ],
[ b"FFFF9876543210EFF802", b"0C5B794CEEBC88B2", b"0C5B794CEEBC77B2", b"53AD3705F09170FD", b"37819B0A5518F433D4D9DB48" ],
[ b"FFFF9876543210EFF804", b"65108DBAB6DB4B28", b"65108DBAB6DBB428", b"8590E369C55697F7", b"7D866E70259C11793CDAB02F" ],
[ b"FFFF9876543210EFF808", b"4E380860A00C70EE", b"4E380860A00C8FEE", b"D8ABBC5DD0CE64C6", b"DD25D0CA4F68430A26F66DD9" ],
[ b"FFFF9876543210EFF810", b"D3B0827129F45E46", b"D3B0827129F4A146", b"B436A434F9944196", b"2B2989CCB9B6B5F987C4ABB6" ],
[ b"FFFF9876543210EFF820", b"7EDCEFCD9401D938", b"7EDCEFCD94012638", b"AD69A6C398EBCC85", b"51097EE9334007CFA6B81F38" ],
[ b"FFFF9876543210EFF840", b"17AC1DD1543D0ACF", b"17AC1DD1543DF5CF", b"4F12869C522A50D4", b"DBA71EF9787A9838EB759190" ],
[ b"FFFF9876543210EFF880", b"0067318AA16525C0", b"0067318AA165DAC0", b"F08F3B16E335EC9A", b"558EB0042DF1361154B6601F" ],
[ b"FFFF9876543210EFF900", b"3E1720D0FAE374F4", b"3E1720D0FAE38BF4", b"F5813F26E84C48BB", b"1922619299FA0D3137E6EBD7" ],
[ b"FFFF9876543210EFFA00", b"536644BC7150BAF9", b"536644BC715045F9", b"D166C62FDB58AACB", b"EA112FD80B33DB206752F8AE" ],
[ b"FFFF9876543210EFFC00", b"3B4926EA7DFB7CD7", b"3B4926EA7DFB83D7", b"6DEF7FD593810AC7", b"5D68BD69F94A316C91839434" ],
[ b"FFFF9876543210F00000", b"A101F43AFE98FEB7", b"A101F43AFE9801B7", b"3FAC6F8763C0B60C", b"3AA3AFAB9C46C993CF81A7A3" ]
    ]

dukpt_1992_table = [
 #KSN                     GEN KEY             PIN ENC KEY         ENC PIN BLOCK       MAC KEY
['FFFF9876543210E00001', '068435038C666E2A', 'C68435D38C666ED5', 'A0BFF43E87FA1B4B', 'C68435D38C6691D5'],
['FFFF9876543210E00002', '4D2E6F3E6914FFD4', '4D2E6F3E6914FF2B', 'E442CECE9E46D31F', '4D2E6F3E6914002B'],
['FFFF9876543210E00003', '6718EB9EC1CEAC9E', '6718EB9EC1CEAC61', '9C1E8ADC8F911037', '6718EB9EC1CE5361'],
['FFFF9876543210E00004', '77956154CF414AA8', '77956154CF414A57', '646AEDD756ED2DF3'],
['FFFF9876543210E00005', '4016546816DC10EF', '4D16546B16DC1010', 'F090AB51207EF2C3'],
['FFFF9876543210E00006', 'CDE9E2CA55480685', 'CDE9E2CA554B0674', 'C1F0E08C9A59D8E7'],
['FFFF9876543210E00007', '7C62AA24CA75533F', '7C62AA24CA7553C0', '82C92E7945F2A00A'],
['FFFF9876543210E00008', '7517D025F52E8FF8', '7517D025F52E8F07', 'C40C52815628254B'],
['FFFF9876543210E00009', '34AB8E8150083240', '34AB8E815D0832B2', '2DE4C27DF0086C56'],
['FFFF9876543210E0000A', '55086422A362F07A', '55086A22A362F085', 'A601E7F1B71350DD'],
['FFFF9876543210E0000B', '4231BEC4D962FE41', '4231BEC4D962FEBE', '418902F88C96B5B0'],
['FFFF9876543210E0000C', '44CC1828BF452465', '44CC1828BF45249A', 'C158318F6448047F'],
['FFFF9876543210E0000D', '8F77676958601623', 'BF7767695B6C16DC', '9E914F6B8E0A5227'],
['FFFF9876543210E0000E', 'EFA7973ED5272E01', 'EFA7973ED5272EFE', 'B8BA9D48C68F30F4'],
['FFFF9876543210E0000F', '48692B322600F7CD', '48692B322B0DF732', '546930BD5C897085'],
['FFFF9876543210E00010', '8153701E12E64019', 'B153701E12E640E6', '6A360BF904BF0CE7'],
['FFFF9876543210E00011', '5A22788D00078422', '5A2278BDD0D784DD', 'BBD23BFE8C1C1D56'],
['FFFF9876543210E00012', '087A435E06F19043', '0B7A435E0BF19DB4', 'EC7E6A4796981581'],
['FFFF9876543210E00013', 'F3EF085956718A2E', 'F3EF085956718AD1', '60FB535C837F380D'],
['FFFF9876543210E00014', '619F70E281016A96', '619E70E28FD16A69', '54BBE4A99AC0F08C']
]


smid = unhexlify(b"FFFF9876543210E00000")
ipek = unhexlify(b"6AC292FAA1315B4D858AB3A3D7D5933A")[:8]
epin = unhexlify(b"041274EDCBA9876F")
mac_data = b"1234567890123456789012345678901234567890"
pin = b"1234"
pan = b"4012345678909"

curk = dukpt.DUKPT_Key(len(ipek))
curk.initializeKeys(smid, ipek)

for test in dukpt_verify_table:
    curk.generateHostKeys(unhexlify(test[0]), ipek)
    #check('KSN          ', unhexlify(test[0]), curk.get_key_serial_nr())
    check('PIN KEY      ', unhexlify(test[1]), curk.calculate_variants(curk.VAR_PIN_OFF))
    check('MAC KEY      ', unhexlify(test[2]), curk.calculate_variants(curk.VAR_MAC_OFF))
    check('ENC PIN BLOCK', unhexlify(test[3]), curk.encrypt(epin))
    check('MAC          ', unhexlify(test[4]), curk.mac_dukpt(mac_data))
    curk.derivate_key()
    print("*" * 80)

ipek = unhexlify('123456789ABCDEF0')
smid = unhexlify('FFFF9876543210E00000')
pin  = b'1234'
pan  = b'401234567890'
mac_data = b"1234567890123456789012345678901234567890"
epin = unhexlify('041274EDCBA9876F')
curk = dukpt.DUKPT_Key(len(ipek))
curk.initializeKeys(smid, ipek)


for test in dukpt_1992_table:
    #print(test[0])
    curk.generateHostKeys(curk.get_key_serial_nr(), ipek)
    check('KSN          ', unhexlify(test[0]), curk.get_key_serial_nr())
    check('PIN KEY      ', unhexlify(test[2]), curk.calculate_variants(curk.VAR_PIN_OFF))
    check('ENC PIN BLOCK', unhexlify(test[3]), curk.encrypt(epin))
    if len(test) == 5:
        check('MAC KEY      ', unhexlify(test[4]), curk.calculate_variants(curk.VAR_MAC_OFF))
    curk.derivate_key()
    print("*" * 80)
print("\n*** All test have been passed!!! ***")