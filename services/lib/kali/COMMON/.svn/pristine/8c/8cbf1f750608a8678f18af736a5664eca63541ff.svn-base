from GVRlib.crypto import CVV1, CVV2

tests = [
    # TITLE      PAN                 EXP.        SVC       PIN     MGT     EXT      CVV
    ["CVV1_01",   "001234567890",     "0612",     "1011",     "1",    "0",    "0",    "634"],
    ["CVV1_02",   "112345678901",     "0701",     "5021",     "2",    "1",    "0",    "266"],
    ["CVV1_03",   "203456789012",     "0702",     "1022",     "3",    "2",    "0",    "041"],
    ["CVV1_04",   "254567890123",     "0703",     "1035",     "1",    "0",    "0",    "768"],
    ["CVV1_05",   "305678901234",     "0704",     "5023",     "1",    "1",    "0",    "903"],
    ["CVV1_06",   "356789012345",     "0705",     "5041",     "0",    "0",    "0",    "747"],
    ["CVV1_07",   "407890123456",     "0706",     "1201",     "1",    "0",    "0",    "839"],
    ["CVV1_08",   "018901234567",     "0707",     "1035",     "2",    "1",    "1",    "527"],
    ["CVV1_09",   "169012345678",     "0708",     "5222",     "1",    "3",    "0",    "626"],
    ["CVV1_10",   "319012345678",     "0709",     "1024",     "1",    "4",    "0",    "812"],
]

test2 = [
    # TITLE        PAN                    EXP        SVC      CVV
    ["CVV2_01",   "70440012345678901",   "1206",     "11",   "191"],
    ["CVV2_02",   "70441123456789012",   "0107",     "21",   "567"],
    ["CVV2_03",   "70442034567890123",   "0207",     "22",   "318"],
    ["CVV2_04",   "70442545678901234",   "0307",     "35",   "449"],
    ["CVV2_05",   "70443056789012345",   "0407",     "23",   "745"],
    ["CVV2_06",   "70443567890123456",   "0507",     "41",   "688"],
    ["CVV2_07",   "70444078901234567",   "0607",     "01",   "729"],
    ["CVV2_08",   "70440189012345678",   "0707",     "35",   "342"],
    ["CVV2_09",   "70441690123456789",   "0807",     "22",   "715"],
    ["CVV2_10",   "70443190123456780",   "0907",     "24",   "554"]
]

KeyA = b"\x01\x23\x45\x67\x89\xAB\xCD\xEF"
KeyB = b"\xFE\xDC\xBA\x98\x76\x54\x32\x10"
Key = KeyA + KeyB
# TEST CVV1
print("*" * 80)
for test in tests:
    data = "".join(x for x in test[1:7]).encode()
    if CVV1(Key, data) == test[7].encode():
        print(test[0] + " PASS")
    else:
        print(test[0] + " FAIL")
# TEST CVV2
print("*" * 80)
for test in test2:
    data = "".join(x for x in test[1:4]).encode()
    if CVV2(Key, data) == test[4].encode():
        print(test[0] + " PASS")
    else:
        print(test[0] + " FAIL")

